parametersSchema:
    todo_by: structure([
        nonIgnorable: bool()
        referenceTime: string()
        referenceVersion: string()
        singleGitRepo: bool()
        virtualPackages: arrayOf(string(), string())
        ticket: structure([
            enabled: bool()
            tracker: anyOf('jira', 'github')
            keyPrefixes: listOf(string())
            resolvedStatuses: listOf(string())
            jira: structure([
                server: string()
                credentials: schema(string(), nullable())
                credentialsFilePath: schema(string(), nullable())
            ])
            github: structure([
                owner: string()
                repo: string()
                credentials: schema(string(), nullable())
                credentialsFilePath: schema(string(), nullable())
            ])
        ])
    ])

# default parameters
parameters:
    todo_by:
        nonIgnorable: true

        # any strtotime() compatible string
        referenceTime: "now"

        # "nextMajor", "nextMinor", "nextPatch" or a version string like "1.2.3"
        referenceVersion: "nextMajor"

        # whether all files beeing analyzed are contained in the same git repository.
        # If set to false, the git tags are fetched for each directory individually (slower)
        singleGitRepo: true

        # a map of additional packages to match package-comments against
        virtualPackages: []

        ticket:
            # whether to analyze comments by issue tracker ticket key
            enabled: false

            # one of: jira, github
            tracker: jira

            # a case-sensitive list of status names.
            # only tickets having any of these statuses are considered resolved.
            # ignored when tracker is GitHub.
            resolvedStatuses: []

            # if your ticket key is FOO-12345, then this value should be ["FOO"].
            # multiple key prefixes are allowed, e.g. ["FOO", "APP"].
            # only comments with keys containing this prefix will be analyzed.
            # ignored when tracker is GitHub.
            keyPrefixes: []

            jira:
                # e.g. https://your-company.atlassian.net
                server: https://jira.atlassian.com

                # see README for possible formats.
                # if this value is empty, credentials file will be used instead.
                credentials: null

                # path to a file containing Jira credentials.
                # see README for possible formats.
                # if credentials parameter is not empty, it will be used instead of this file.
                # this file must not be commited into the repository!
                credentialsFilePath: null

            github:
                # The account owner of the repository.
                owner: ~

                # The name of the repository without the .git extension.
                repo: ~

                # see README for possible formats.
                # if this value is empty, credentials file will be used instead.
                credentials: null

                # path to a file containing Jira credentials.
                # see README for possible formats.
                # if credentials parameter is not empty, it will be used instead of this file.
                # this file must not be commited into the repository!
                credentialsFilePath: null

conditionalTags:
    staabm\PHPStanTodoBy\TodoByTicketRule:
        phpstan.rules.rule: %todo_by.ticket.enabled%

services:
    -
        class: staabm\PHPStanTodoBy\TodoByDateRule
        tags: [phpstan.rules.rule]
        arguments:
            - %todo_by.referenceTime%
    -
        class: staabm\PHPStanTodoBy\TodoByTicketRule

    -
        class: staabm\PHPStanTodoBy\TodoByVersionRule
        tags: [phpstan.rules.rule]
        arguments:
            - %todo_by.singleGitRepo%

    -
        class: staabm\PHPStanTodoBy\TodoByPackageVersionRule
        tags: [phpstan.rules.rule]
        arguments:
            workingDirectory: %currentWorkingDirectory%
            virtualPackages: %todo_by.virtualPackages%

    -
        class: staabm\PHPStanTodoBy\utils\GitTagFetcher

    -
        class: staabm\PHPStanTodoBy\utils\ReferenceVersionFinder
        arguments:
            - %todo_by.referenceVersion%

    -
        class: staabm\PHPStanTodoBy\utils\ExpiredCommentErrorBuilder
        arguments:
            - %todo_by.nonIgnorable%

    -
        class: staabm\PHPStanTodoBy\utils\ticket\TicketRuleConfigurationFactory

    -
        class: staabm\PHPStanTodoBy\utils\ticket\TicketRuleConfiguration
        factory: @staabm\PHPStanTodoBy\utils\ticket\TicketRuleConfigurationFactory::create

    -
        class: staabm\PHPStanTodoBy\utils\ticket\GitHubTicketStatusFetcher
        arguments:
            - %todo_by.ticket.github.owner%
            - %todo_by.ticket.github.repo%
            - %todo_by.ticket.github.credentials%
            - %todo_by.ticket.github.credentialsFilePath%

    -
        class: staabm\PHPStanTodoBy\utils\ticket\JiraTicketStatusFetcher
        arguments:
            - %todo_by.ticket.jira.server%
            - %todo_by.ticket.jira.credentials%
            - %todo_by.ticket.jira.credentialsFilePath%
